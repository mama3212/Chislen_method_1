def simplified_newton_method(f, df_x0, x0, tol=1e-6, max_iter=100):
    """
    Упрощённый метод Ньютона (с фиксированной производной).

    :param f: Функция, для которой ищется корень.
    :param df_x0: Значение производной f'(x) в начальной точке x0.
    :param x0: Начальное приближение.
    :param tol: Допустимая погрешность.
    :param max_iter: Максимальное количество итераций.
    :return: Найденный корень или None, если метод не сошелся.
    """
    x = x0
    for _ in range(max_iter):
        fx = f(x)

        if abs(fx) < tol:
            return x  # Корень найден

        if df_x0 == 0:
            print("Ошибка: производная равна нулю, метод не применим.")
            return None

        x = x - fx / df_x0  # Фиксированное обновление

    print("Достигнуто максимальное число итераций.")
    return x


# Пример: ищем корень уравнения x^2 - 2 = 0 (то есть sqrt(2))
def func(x):
    return x ** 2 - 2


df_x0 = 2 * 1.5  # Фиксируем производную в точке x0 = 1.5

# Начальное приближение x0 = 1.5
root = simplified_newton_method(func, df_x0, x0=1.5)
print(f"Найденный корень: {root}")
